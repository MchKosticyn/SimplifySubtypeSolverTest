METHOD: System.Collections.Generic.Dictionary`2[System.Char,ChessDotNet.Piece] VSharp.Test.Tests.Marshaling.CreateRepeatingDictionary()
RESULT: (HeapRef 1)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> System.Collections.Generic.Dictionary`2[System.Char,ChessDotNet.Piece] CLASS [
	| System::Collections::Generic::Dictionary`2::_buckets ~> (HeapRef 3)
	| System::Collections::Generic::Dictionary`2::_comparer ~> null
	| System::Collections::Generic::Dictionary`2::_count ~> 3
	| System::Collections::Generic::Dictionary`2::_entries ~> (HeapRef 4)
	| System::Collections::Generic::Dictionary`2::_freeCount ~> 0
	| System::Collections::Generic::Dictionary`2::_freeList ~> -1
	| System::Collections::Generic::Dictionary`2::_keys ~> null
	| System::Collections::Generic::Dictionary`2::_values ~> null
	| System::Collections::Generic::Dictionary`2::_version ~> 3]
2 ==> ChessDotNet.Pieces.King CLASS [
	| ChessDotNet::Pieces::King::<HasCastlingAbility>k__BackingField ~> True
	| ChessDotNet::Pieces::King::<Owner>k__BackingField ~> White]
3 ==> [| 0 ~> 3; 1 ~> 2; 2 ~> 1 ... 3 ... |]
4 ==> [|
	0 ~> System.Collections.Generic.Dictionary`2+Entry[System.Char,ChessDotNet.Piece] STRUCT [
		| System::Collections::Generic::Dictionary`2::Entry::hashCode ~> 6357089
		| System::Collections::Generic::Dictionary`2::Entry::key ~> 'a'
		| System::Collections::Generic::Dictionary`2::Entry::next ~> -1
		| System::Collections::Generic::Dictionary`2::Entry::value ~> (HeapRef 2)];
	1 ~> System.Collections.Generic.Dictionary`2+Entry[System.Char,ChessDotNet.Piece] STRUCT [
		| System::Collections::Generic::Dictionary`2::Entry::hashCode ~> 6422626
		| System::Collections::Generic::Dictionary`2::Entry::key ~> 'b'
		| System::Collections::Generic::Dictionary`2::Entry::next ~> -1
		| System::Collections::Generic::Dictionary`2::Entry::value ~> (HeapRef 5)];
	2 ~> System.Collections.Generic.Dictionary`2+Entry[System.Char,ChessDotNet.Piece] STRUCT [
		| System::Collections::Generic::Dictionary`2::Entry::hashCode ~> 6488163
		| System::Collections::Generic::Dictionary`2::Entry::key ~> 'c'
		| System::Collections::Generic::Dictionary`2::Entry::next ~> -1
		| System::Collections::Generic::Dictionary`2::Entry::value ~> (HeapRef 6)]
	... 3 ... |]
5 ==> ChessDotNet.Pieces.King CLASS [
	| ChessDotNet::Pieces::King::<HasCastlingAbility>k__BackingField ~> True
	| ChessDotNet::Pieces::King::<Owner>k__BackingField ~> White]
6 ==> ChessDotNet.Pieces.King CLASS [
	| ChessDotNet::Pieces::King::<HasCastlingAbility>k__BackingField ~> True
	| ChessDotNet::Pieces::King::<Owner>k__BackingField ~> White]
---------- s1 = ----------
ChessDotNet.Pieces.King ==> CLASS []
System.Collections.Generic.Dictionary`2[System.Char,ChessDotNet.Piece] ==> CLASS []
VSharp.Test.Tests.Marshaling ==> CLASS []
